name: Deploy to DigitalOcean

on:
  workflow_dispatch: 

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Initialize Terraform
      env:
        TF_VAR_digitalocean_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        TF_VAR_ssh_fingerprint: ${{ secrets.SSH_FINGERPRINT }}
      run: terraform init -upgrade
      working-directory: terraform

    - name: Plan Terraform
      run: terraform plan -out=tfplan
      working-directory: terraform

    - name: Apply Terraform
      if: success()
      run: terraform apply -auto-approve tfplan
      working-directory: terraform

    - name: Retrieve Droplet IP
      run: |
        DROPLET_IP=$(terraform output -raw droplet_ip)
        echo "Droplet IP: $DROPLET_IP"
        echo "DROPLET_IP=$DROPLET_IP" >> $GITHUB_ENV
      working-directory: terraform

  deploy:
    needs: terraform
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

    steps:
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io

    - name: Configure SSH Access
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts

    - name: Deploy Containers to DigitalOcean in One Docker Instance
      run: |
        ssh -o StrictHostKeyChecking=no root@$DROPLET_IP << EOF
          docker login -u "$DOCKER_HUB_USERNAME" -p "$DOCKER_HUB_PASSWORD"

          docker pull prabhulalithakrishnan/tradeport-backend-mssql:latest

          docker run -d -p 1433:1433 --name mssql --network=my_network prabhulalithakrishnan/tradeport-backend-mssql:latest

          docker ps -a
        EOF
