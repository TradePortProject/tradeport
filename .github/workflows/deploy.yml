name: Deploy to DigitalOcean

on:
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Initialize Terraform
      run: |
        terraform init

    - name: Apply Terraform
      run: |
        terraform apply -auto-approve

    - name: Retrieve Droplet IP
      run: |
        DROPLET_IP=$(terraform output -raw droplet_ip)
        echo "DROPLET_IP=$DROPLET_IP" >> $GITHUB_ENV

    - name: Configure SSH Access
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Deploy Containers to DigitalOcean
      run: |
        ssh -o StrictHostKeyChecking=no root@$DROPLET_IP << EOF
          docker login -u "$DOCKER_HUB_USERNAME" -p "$DOCKER_HUB_PASSWORD"
          docker network create my_network || true

          docker pull prabhulalithakrishnan/mssql:latest
          docker pull prabhulalithakrishnan/frontend:latest
          docker pull prabhulalithakrishnan/productservice:latest

          docker run -d --name mssql --network=my_network prabhulalithakrishnan/mssql
          docker run -d --name frontend --network=my_network prabhulalithakrishnan/frontend
          docker run -d --name productservice --network=my_network prabhulalithakrishnan/productservice
        EOF
